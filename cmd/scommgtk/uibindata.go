// Code generated by go-bindata.
// sources:
// ui/key-cert-editor.glade
// ui/main.glade
// ui/plugin-acceptor.glade
// ui/storage-load.glade
// ui/systray-replacer.glade
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _uiKeyCertEditorGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x41\x6f\xe3\x36\x13\xbd\xfb\x57\xf0\xe3\xf5\x83\xe3\x64\x8b\x16\x3d\xd8\x5a\x74\x17\xc8\x76\x91\x6d\x11\x20\x69\x8b\x9e\x04\x8a\x1a\xcb\x5c\x53\x1c\x95\xa4\xec\xa8\x45\xff\x7b\x21\xab\x46\xec\x88\xb2\x44\x29\x71\x1c\xf7\xe6\xc0\x1c\x72\xe6\xbd\xc7\xe1\xcc\x38\xd3\xf7\x0f\xa9\x24\x2b\xd0\x46\xa0\x9a\xd1\xab\x8b\x4b\x4a\x40\x71\x8c\x85\x4a\x66\xf4\x97\xfb\xeb\xf1\xf7\xf4\x7d\x30\x9a\xfe\x6f\x3c\x26\x9f\x40\x81\x66\x16\x62\xb2\x16\x76\x41\x12\xc9\x62\x20\xdf\x5c\xbc\xbb\xbc\xb8\x24\xe3\x71\x30\x9a\x0a\x65\x41\xcf\x19\x87\x60\x44\xc8\x54\xc3\x1f\xb9\xd0\x60\x88\x14\xd1\x8c\x26\x76\xf9\x7f\xfa\x78\x50\x69\x46\x27\x9b\x75\x18\x7d\x05\x6e\x09\x97\xcc\x98\x19\xfd\x64\x97\x3f\x81\xca\x29\x11\xf1\x8c\xa6\xa0\xf2\x2b\x5a\xae\x22\x64\x9a\x69\xcc\x40\xdb\x82\x28\x96\xc2\x8c\xae\x84\x11\x91\x04\x1a\xdc\xeb\x1c\xa6\x93\xed\xb7\xee\xc5\x9c\xa9\x70\x8e\x3c\x37\x34\xb8\x66\xd2\xd4\xd7\xf3\x85\x90\x71\xf5\xd9\xe5\xd2\xc7\x05\xf0\x8d\x5f\x9f\x2d\xa4\x95\x6f\x3c\x15\x21\xc7\xac\xa0\x5b\x2b\x4f\x17\xfb\xb8\xe9\xb2\x51\x18\x9a\x05\xae\x43\x26\x65\xf7\x83\x24\x8b\x40\x52\x62\x35\x53\x46\x32\xcb\x22\x09\x33\x5a\x80\xa1\xc1\x0f\x52\xe2\x9a\x7c\xc4\xac\xe8\xb2\x4f\x6e\x20\xcc\x55\x0c\x5a\x0a\xd5\x18\xe7\x74\x52\xe1\xf9\x2f\xd4\x93\x1d\xac\x7b\xe2\x5e\x06\x7c\x66\xb8\xdf\x2d\x70\x4d\x6e\xc0\x81\xfa\x00\xf8\xee\x20\x63\x9a\x59\xd4\xfb\x10\x9a\x54\x84\x16\x93\x44\x82\x09\xcd\x76\xc9\x71\xf1\x1c\x10\xd4\x7e\x2c\xa9\x08\x25\xb2\xf8\xb5\xd5\xd0\x4c\xec\x17\x64\x31\x99\x6b\x4c\xc9\xb5\x90\x70\x71\x71\x0a\xd7\xaa\x06\xa1\x61\x2b\x38\x5d\x08\xef\xd8\x0a\x88\xc5\x13\x02\xb0\x7e\xb1\xde\xec\xed\xe1\xa0\xad\x45\x94\xe1\x12\x8a\x50\xa8\x39\xbe\xb6\x0e\x9e\x39\xb1\x6e\xe3\x23\xe3\xf1\x12\x8a\x71\x19\xe1\x29\x28\xa8\x99\x87\x2c\x8f\xce\x9f\x8a\x2a\xc8\x37\xc0\x46\xf9\x41\xcc\x05\x67\x16\xce\x9c\x92\x9d\x48\x8f\xc4\xcb\xee\x17\x75\x4e\x3e\xe0\x43\x45\x87\x46\xb4\x47\x69\x02\x9e\xac\x47\x2d\x40\x59\x66\x05\x2a\x1a\xac\x4a\x74\x38\x93\x6d\x46\x26\x63\x5c\xa8\x84\x06\xdf\xfa\xf6\x18\x65\xbc\xc7\x16\xd7\x9e\x4b\x6e\xb7\xbe\x54\xda\x29\x89\xd8\xc8\x28\xb4\x45\xb6\x5b\x2b\xf4\x72\xb6\xaf\xc3\x7e\xe2\xfe\xeb\x06\x0a\x72\x5f\x64\xf0\xb7\x7b\xaf\x7d\x61\x6e\x77\x67\x7c\x29\x54\x72\xf8\x4c\x78\xc8\x98\x8a\x3d\x1d\x9d\x8b\x43\x77\xd6\x65\x91\xa1\x11\x95\xfc\x2e\x9b\x22\xa8\xb9\xbb\x97\xf7\x7a\x93\x0c\x5a\xef\xb5\x04\x47\x66\xf9\x0d\x31\x73\xd5\x97\x99\xa7\x31\xd6\xe3\xf3\x8e\xcd\x2f\x2e\x2f\xb5\x3d\x89\xc7\xfb\x75\xfd\x90\x5b\x5b\x6e\xfd\x22\x09\xae\xab\x89\x06\x0e\x62\x05\x26\x8c\x61\xce\x72\x69\x7d\xb0\xc9\xf2\x8c\x06\x9b\x81\x54\xc7\x4c\x9a\x49\xc6\x61\x81\x32\x06\x3d\x79\x8b\x22\x70\xc4\x39\x44\x04\x3f\xa3\x85\x08\x71\x59\x65\x19\x15\x1d\x5b\x0a\x1d\xb2\xe0\x53\x17\xc3\x79\x5e\x42\xf7\xa2\x49\xd0\xc7\x6c\x53\xf8\x59\x16\xf9\xbe\x90\x1b\xbb\x08\x75\x0c\xba\xcd\xb2\x86\x92\x1b\xa9\x3b\xae\x51\x4a\x88\x7f\x13\x2a\xde\x1b\xc5\x0d\x82\x69\x00\x54\x2e\xd3\x85\xd9\x78\x19\x31\x1d\x66\x28\x05\x2f\x68\xc0\xe4\x9a\x15\xc6\x67\x93\x55\xaf\x4d\x9c\x30\xba\xa1\xbc\x87\x07\xfb\xab\x80\x75\x25\x3a\xbb\x76\x89\x6e\x30\xaa\x03\x91\x75\x99\x43\x2c\x36\xb5\x56\x8b\xa2\x9a\xcc\x53\x54\x58\xd6\xca\x9d\x9c\x77\x95\x03\xdb\x6f\xdc\x8a\x75\x1a\x38\x17\x57\x5c\x91\xb2\xaa\x9d\x51\xcb\xa2\x1a\xf4\x4d\xd5\xd2\x71\x44\xdf\x0a\xae\xdf\x88\x59\x35\x6f\xd5\x04\xb2\xbb\xee\x72\x1d\x6d\x59\x14\x56\xaf\x4d\x8b\xd7\x8e\xe2\xa8\x85\x9f\x76\x52\xf6\xdb\xa7\x93\xa2\x24\x65\x3a\x11\x2a\x94\x30\xb7\x34\xb8\x6a\x28\xe5\x0f\x9a\x6a\x91\x2c\xfa\xda\x5a\xcc\x7a\x5a\x46\x68\x2d\xa6\xbe\xc6\x9d\xda\xe6\x76\x86\xdd\x2c\x7f\x4e\x59\xf2\xb4\xfb\x1c\xcc\xf5\x50\xbe\x5d\xf6\x05\x93\x22\x69\x6e\x0f\x9a\x0d\x8d\x45\xbe\xa4\x41\x62\x97\x8d\x53\x98\x43\xe6\x82\xa3\x0a\x8d\xf8\x13\x68\xf0\x5d\xdf\xa4\x7a\xe8\xce\xbb\xce\xdc\x96\xa4\x7d\x70\x6e\x6f\xbd\x9a\x2c\x5b\x9b\xe3\xc7\x40\x9b\x33\x98\xfb\xf9\xf0\xd3\x64\xd3\x73\xe0\x72\xfa\x55\x35\xd9\xfc\x34\x58\x24\x65\x0d\x42\x6e\xb5\x58\x31\x0b\xe4\x06\x8a\x11\x7d\xfc\x29\x98\x12\xa6\x62\x42\xb7\xbf\x51\xd2\x91\x50\xa4\x6c\x85\x08\x8b\x70\x05\x64\x34\x42\x25\x0b\xf2\x3b\xe6\xc4\x94\x0d\x0f\x59\x2a\x5c\x97\x7f\xea\xdd\x0d\x7d\xbd\xfd\x9a\x1b\x2b\xe6\x05\x0d\x38\x28\x0b\xba\xef\x05\x6c\x15\xc7\xb9\xdc\x82\x96\x4c\xe3\x7f\x0b\x86\x17\x04\x9d\x9c\xf3\x2f\x06\xfe\x0b\xc5\xda\x8f\x22\x8e\xe1\x45\xab\xb5\x8e\xca\x39\x42\x91\x57\x8f\xa5\x61\x88\xd9\x40\x7c\x37\xd2\x4f\x74\x48\x7d\x9d\x4b\xd9\x9c\x1e\xfb\x0f\x42\x3b\xf1\xf4\x5c\xf3\xe3\x83\xf3\x80\xd7\x1c\x99\x78\xcf\x00\x06\xf7\xff\x5d\xfb\x95\x5a\xdf\x9f\x31\x6d\x4f\x74\x92\xe2\xd1\xeb\xf7\xee\xf3\x3b\xb7\xec\xfd\xaf\xc4\x33\x0c\xed\xcf\x39\x13\xdd\xe6\x91\x14\x9c\xdc\x32\x6d\x9f\x3b\x19\x75\x78\x6b\x5e\x28\x7f\xf5\x1f\xb0\x77\x1d\x3e\xf7\x9d\xaf\xbf\xf3\x99\xaf\x3f\x86\x31\x9d\xec\xfc\x9b\xed\x3f\x01\x00\x00\xff\xff\x38\x8a\x33\xb3\xbf\x2b\x00\x00")

func uiKeyCertEditorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiKeyCertEditorGlade,
		"ui/key-cert-editor.glade",
	)
}

func uiKeyCertEditorGlade() (*asset, error) {
	bytes, err := uiKeyCertEditorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/key-cert-editor.glade", size: 11199, mode: os.FileMode(420), modTime: time.Unix(1489591472, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiMainGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6f\x6f\xdb\x36\x13\x7f\xdf\x4f\xc1\x47\x6f\x1f\x24\x76\x9c\x3e\x4f\x3b\xc0\x76\xd1\x75\x6b\x50\xac\x28\x8a\xa5\x5b\x5f\x0a\x94\x74\x96\x38\xd3\xa4\x46\x52\x76\xd2\x4f\x3f\x58\xb2\x13\xc7\xe6\x3f\x29\x8a\xa3\xcc\xca\x2b\x1b\xe6\x9d\x78\xc7\xdf\x1d\xef\x4e\x3c\x66\xfc\xee\x66\x41\xd1\x12\x84\x24\x9c\x4d\x82\x8b\xf3\x61\x80\x80\xc5\x3c\x21\x2c\x9d\x04\x7f\x7c\xfb\x78\xf6\x36\x78\x37\x7d\x35\xfe\xcf\xd9\x19\xba\x02\x06\x02\x2b\x48\xd0\x8a\xa8\x0c\xa5\x14\x27\x80\x2e\xcf\x47\xa3\xf3\x0b\x74\x76\x36\x7d\x35\x26\x4c\x81\x98\xe1\x18\xa6\xaf\x10\x1a\x0b\xf8\xbb\x20\x02\x24\xa2\x24\x9a\x04\xa9\x9a\xff\x37\xb8\x7f\xd0\xe5\xf9\x68\x18\x0c\xca\x71\x3c\xfa\x0b\x62\x85\x62\x8a\xa5\x9c\x04\x57\x6a\xfe\x9d\xb0\x84\xaf\x02\x44\x92\x49\xb0\xaa\x3e\xaf\x07\x22\x34\xce\x05\xcf\x41\xa8\x5b\xc4\xf0\x02\x26\x41\x8c\x59\x38\xe3\x71\x21\x83\xe9\x47\x4c\x25\x8c\x07\xdb\x01\x9b\xf1\x71\x46\x68\x52\x7d\x5e\x53\x53\x1c\x43\xc6\x69\x02\x62\xb0\x19\x30\xd8\x19\xb1\x37\xfa\x60\x5a\x3f\xf3\x9b\x60\xfb\xeb\xe1\x5c\x96\x44\x92\x88\x42\x30\xfd\x26\x8a\x83\x89\x34\x99\xbc\x8e\x86\x0b\x02\x4c\x61\x45\x38\x0b\xa6\x4b\x10\x8a\xc4\x98\x6a\x09\x1f\xc8\xa2\x97\xe7\x0b\x57\x10\x71\x3e\xaf\x14\xcd\x36\xdf\xc2\x05\x26\x2c\xd8\xa5\x6c\x20\xab\x43\xde\x3a\x64\x32\xe3\xab\x30\xe2\x22\x01\x61\x51\x94\x96\x32\x16\x9c\x52\xec\x9e\xe8\x81\xae\xf4\xfa\xfa\x8a\x19\x24\xc1\xfe\xb8\x86\xda\x79\x84\x86\x74\xa4\x0b\x2c\x52\xc2\x42\x0a\x33\x15\x4c\xff\xd7\x80\x52\x90\x34\x6b\x48\xaa\x78\xde\x8c\x30\xe2\x4a\xf1\x45\x4d\xda\x9c\x4b\x52\xe1\x7f\x34\x1c\x36\x21\x0c\x25\xa8\xfa\x0a\x5e\x91\x04\xc2\x0c\xb3\xc4\x6b\x61\xb5\x88\x42\x5a\x54\x5d\x97\x28\x85\xe4\xfb\xae\xa3\x73\xcd\xc6\x1b\x62\x3a\xe2\x1a\x30\xd3\x91\xcb\x0c\x27\x7c\x15\xaa\xdb\x1c\x82\x29\x61\x4e\x72\xa3\x2e\xf4\xfa\xf8\x14\x73\xf6\x27\x81\x8d\xfb\x27\xcb\x10\xe7\x79\x48\x62\xce\xa4\x41\x37\x8f\xd6\x4f\x0b\x3a\xd2\xb1\x78\x68\x58\xa3\x37\x56\xb0\xda\x99\x04\xd3\xff\xbb\x89\xc7\x83\x4a\x97\x86\x65\x18\x98\x31\x69\x21\x1c\xe7\x38\x9e\x13\x96\xfa\x41\x43\x80\x24\x3f\x1a\xa2\x52\x66\x82\xb0\xb9\xc3\xc5\x6f\x27\x6c\x9c\x95\x51\xcc\xde\x24\x7d\x74\xa1\xd7\xc7\x37\x01\x50\x9a\x64\xc7\x0d\xb0\x14\x0b\x95\x41\x28\xc3\xf4\xac\xfc\x3a\x09\x24\x50\x88\xab\x1d\xc3\x48\x6a\x92\xfa\xfa\x8e\x76\x60\x79\xae\xd9\xb4\x50\xb7\xec\xd2\xc3\xb6\x8e\x6c\x98\x7a\x19\xb5\x83\x37\xcb\xbb\x06\xf9\x24\x50\x38\x3a\x58\xce\xc3\x25\xfc\x8c\x23\xa0\x47\x8a\xd8\x9c\xea\xd9\xa7\xa5\xe5\xe4\x90\x12\x98\x49\x8a\xd5\x3a\x4e\x9d\x04\xb7\x20\x83\xe9\xfb\x3c\xa7\x24\x2e\xa3\x7c\x69\xe6\x68\x82\x87\x19\x1a\xfb\x33\x50\x38\x0a\x67\x84\x52\xe7\xe4\x0d\xeb\x6a\x59\x26\xf7\xda\xac\xb3\xa9\x72\x8b\x8f\xf8\x4d\x38\xe3\x22\xa4\x3c\xed\xea\x52\x79\xa7\x5d\x76\x25\x20\x7d\x12\xea\x54\x69\x1b\x6b\x7d\x1f\x36\xbf\x6e\x73\x9d\x4f\xc1\x1c\x3f\xf3\xf4\x29\xad\xd0\x6b\x65\xba\x66\xbc\x85\x52\x9c\x3d\x2c\x88\x74\x6a\x35\xeb\x5b\xec\x01\x1c\x6e\x79\xa1\x42\xa9\x6e\xd7\x53\x97\xb9\x00\x9c\xb4\x95\xf2\x55\xda\xdb\x78\xbf\xf2\x73\x28\x60\x0e\xb7\x9e\x91\xa6\x19\xa9\x25\x97\xba\xfb\xfb\x73\x06\xae\x02\x62\x20\x4b\x90\x61\x02\x33\x5c\x50\x8f\xbc\xbc\xcd\xb0\x08\x6e\x72\xcc\x92\x66\x33\xaf\x4c\xaf\x09\xe5\xbd\xbd\x3b\x32\xc2\xb6\xa2\xa9\x66\xce\x68\xd4\x6f\x13\x3a\x5a\xb3\xf1\x5d\x2b\x2e\x70\x0a\xe8\x03\x67\x4a\x70\x8b\xb3\x39\xd2\x2a\x75\x6d\xcb\xe8\xee\x66\x71\x3a\xc5\xd3\x47\x6f\x8b\x32\xc7\x31\x61\xa9\xeb\xb1\x35\x36\xc3\x2b\x41\x74\x45\x75\xdd\xc3\xdb\xda\xa9\x1a\xa5\xc1\x82\xaf\x42\x3f\xe9\xb5\x4f\xe7\xb4\x58\xb0\x3a\x0c\x6a\xd6\x68\x6c\x11\x59\x2b\xfa\x6c\x43\xa7\x3a\x1e\xb5\x21\x69\x62\xe4\xaf\x5b\x1d\xf5\x5e\xbc\xa7\xb0\x50\xfe\x35\xa7\x7a\x85\x25\x4d\xf8\x87\xe3\x38\xcc\x69\x91\x86\xc0\xaa\xf7\x55\x16\x86\x75\xf6\xa4\x5f\x4b\x76\x3e\x82\xe8\xf8\xd6\xc6\x87\x8e\x49\x83\x42\x9e\x8e\x4d\x93\x48\xf1\x8e\x97\xb5\x02\xb7\x7d\x9e\x2d\x72\x34\xcd\xaa\x4e\x04\x69\xe2\xe1\x1f\x49\x9a\x38\x78\x86\x03\xbb\x0a\x71\x4a\xeb\x28\x6a\xb6\x8f\xfc\x84\xc8\x56\xa1\xff\x4b\xc5\xaf\xc7\xfe\xa9\x60\xff\xb2\xdb\xd8\xbf\x86\x1c\x0b\xac\xb8\xa8\xe0\x2f\xb7\x5f\x2f\x6a\x22\xbe\x6d\x60\x7a\x6f\xdc\xa7\x84\x25\x6b\x25\xce\xc6\x82\x71\x16\x66\x7c\xc1\x53\x60\xc0\xeb\xd9\x7d\x17\x9d\x72\xc1\x04\xa4\x44\x2a\x10\xad\xf9\xe5\xdf\x61\xc1\x97\xbd\x5b\x3e\x19\x53\x7a\xf3\x72\xd1\x6f\x2b\xca\x9a\x04\xb7\x01\xff\x37\x77\x71\xd6\xc4\xb6\xc7\xbd\x6b\x56\x5d\xc3\xfd\xdb\x6e\xe3\xde\x14\x8e\x5c\xf6\xe1\x48\xf7\xb0\xf4\x53\x1f\x8e\x94\x0e\xb9\x3c\x0b\xbc\xb2\x9d\xca\x32\x29\xc2\x52\xb6\xcf\xf8\xaa\xf7\xca\xa7\x62\x49\x17\x5e\xa7\x30\xdb\x40\xbf\x4b\xa7\x6e\x7d\x1e\x60\x18\x66\x2a\xc4\x4a\xe1\x38\x73\xbe\x3b\xd4\x73\x50\x3c\xbf\x63\x70\xe1\x73\xa2\xd4\xfe\x3a\xd5\xa6\x80\xbe\x7e\x7d\x52\xf5\xeb\x25\xde\x86\xcc\x33\x01\x32\x6b\x31\x68\x2e\xf9\xf5\x0e\xfa\x54\x1c\xf4\xd1\xfc\x73\xfb\xd8\xc7\x71\x0c\xb9\x6a\x0d\xfa\xef\x4b\x76\x3d\xf2\x4f\x05\xf9\x1e\x1b\x32\x3a\x89\xc8\xc4\xa3\x90\x7f\xcc\xc8\xc4\x74\x1c\xc9\x24\x4a\x27\xa2\x92\x0c\x53\x92\xb2\x3a\x81\x40\x4d\xbf\x04\x09\xfa\x4a\x8b\x94\xd8\x4e\xa8\xef\x70\xc7\x4a\x09\x12\x15\x0a\xa4\x15\xdb\x77\xc3\x36\xb3\x58\x41\x79\xb2\x06\x2d\x31\x2d\x60\x12\x44\x9c\x26\xf6\x4e\x0c\xf7\x73\xba\x8e\xfe\x46\x0c\x56\x24\x51\x99\xd7\xeb\xdf\xde\x72\x1c\x3c\x9e\xd2\x72\x96\x98\x94\xfd\xc8\xbd\xe9\x3c\x89\xe9\x78\x9d\x7e\x78\x19\xa6\xe3\xd5\x82\xa8\x13\xa7\x0b\x9d\xaf\x59\xdd\xd0\xea\x40\x88\xc7\x32\xa8\xd9\x10\x89\x1a\x66\x03\x77\x8d\x91\x65\x3e\xa0\x96\xeb\x14\xe0\x99\xeb\xe7\x8f\x61\x53\x1d\x3e\x0b\x53\x41\x92\x90\x12\xb6\x76\x59\x11\x57\xfe\xc9\xf7\x63\xfa\x2f\xcd\x0a\xf6\xea\xc1\x44\x3e\x09\x9f\x4f\x36\xf1\xbc\xb1\xb3\x57\x0e\xf0\x82\xaa\x7a\xbd\x1b\x7b\x99\x6e\x6c\x89\x7b\x37\xd6\xbb\xb1\xe7\x73\x63\x4f\x5a\x02\xe8\x1b\xc8\x8e\xd2\x40\x66\x59\xc3\xbe\x81\x4c\x97\x1e\x3a\x93\xc2\x23\xad\x8e\xc6\x34\xfb\xc6\x31\x2d\xed\x0b\xe9\xe1\xaa\xd1\x8d\xf5\x69\x81\x53\xd3\x19\xfc\x4e\xb5\x63\x2d\x37\x65\x1a\x60\xd6\xb6\x6c\x1d\xa9\x54\x3c\x9e\x07\xd3\x54\xcd\xcf\x18\xa8\x15\x17\xf3\xba\x1c\x48\xcc\x59\x58\x5d\xa9\xe2\xb8\x98\xa9\xdf\x6b\x5a\xba\x93\xc9\x56\x4b\xec\x14\x30\x2d\x27\x8d\x3e\x7c\x71\x32\xf3\x28\xc2\xed\x17\xfa\x4a\x1c\x6e\xcb\x7c\xa3\xe1\x70\x38\x34\x45\x98\xae\x1a\x5f\xfb\x60\x6d\xa4\xc1\x36\xd0\xea\x88\x40\x7b\xb4\xba\xd1\x0a\x71\x21\x00\x7d\xe0\x8b\x45\xc1\xb6\xb7\x11\xa1\x2f\x9e\x0e\xb3\x09\x8e\xcb\xa3\x2b\x5b\x20\x13\x85\x29\x89\xcd\xb9\xd2\x21\x79\x8c\x77\xc8\x87\xe7\x6f\x87\x0f\xff\x5e\xf7\x56\xe1\x2a\x72\xf7\x56\xb1\x17\x5c\x78\xbd\x03\xf2\x37\xa9\xe5\xf0\xdc\xf9\x8e\xe3\xd1\x3b\xc0\xc5\xa8\x53\x3b\xc0\x73\x85\x2b\x8e\x0a\xc2\xf3\xa6\xc6\xfd\x15\x5c\x5a\x5a\xcb\x9b\xd3\x88\x17\x16\x43\xfc\x37\x5d\xc2\xa5\x93\x45\x2f\x47\x13\x93\xab\x6f\x6a\xb5\x63\x2c\x8d\xa8\x7b\x62\x3e\x14\x71\xe7\xc7\xdd\x1f\x34\x2f\x13\xc8\x0f\xb8\x12\xbc\xc8\xb7\xb7\xc1\xaf\x48\x92\x82\xba\x73\x64\x9b\xef\x9b\x79\x1a\x6e\x56\x18\xf8\x8d\xde\x76\xa3\x1b\x86\xef\x74\xef\x7a\x32\xdc\xe9\xa4\xf4\xa4\xa8\xba\xcf\x5c\x13\xb8\xf4\x65\xb7\xdb\x3b\xe1\x20\xd9\x3f\xcc\xeb\x39\x7c\x73\xfe\xf1\xee\x6a\xfd\x9d\xe5\xb9\x5f\xd8\xf1\x60\xe7\x9f\x04\xfc\x13\x00\x00\xff\xff\x05\x21\x04\xe9\x7d\x60\x00\x00")

func uiMainGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiMainGlade,
		"ui/main.glade",
	)
}

func uiMainGlade() (*asset, error) {
	bytes, err := uiMainGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/main.glade", size: 24701, mode: os.FileMode(420), modTime: time.Unix(1541784926, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiPluginAcceptorGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x6f\xdb\xb8\x12\x7e\xf7\xaf\x98\xa3\xf3\x90\xcb\x71\xec\x24\x6d\xcf\xb6\x80\xed\x62\xd3\x6d\x82\x02\x8b\x6e\x81\x66\xb1\xd8\x27\x83\x26\x47\x12\x37\x14\xa9\x25\x47\x76\xfc\xef\x17\x94\xec\xc4\x89\xa5\xd8\x72\x62\x47\xd9\xa6\xed\x83\x1b\x72\x86\x9c\xcb\x37\x17\x66\xdc\xfb\x78\x9d\x28\x18\xa3\x75\xd2\xe8\x7e\x70\xd2\x39\x0e\x00\x35\x37\x42\xea\xa8\x1f\xfc\x7e\x79\x7e\xf4\x3e\xf8\x38\x68\xf5\xfe\x73\x74\x04\x17\xa8\xd1\x32\x42\x01\x13\x49\x31\x44\x8a\x09\x84\x37\x9d\xd3\xd3\xce\x09\x1c\x1d\x0d\x5a\x3d\xa9\x09\x6d\xc8\x38\x0e\x5a\x00\x3d\x8b\x7f\x67\xd2\xa2\x03\x25\x47\xfd\x20\xa2\xab\xff\x05\xb7\x07\xbd\xe9\x9c\x1e\x07\xdd\x7c\x9f\x19\xfd\x85\x9c\x80\x2b\xe6\x5c\x3f\xb8\xa0\xab\x3f\xa4\x16\x66\x12\x80\x14\xfd\x60\x52\x7c\xf6\x1b\x01\x7a\xa9\x35\x29\x5a\x9a\x82\x66\x09\xf6\x03\xce\xf4\x30\x34\x3c\x73\xc1\xe0\x9c\x29\x87\xbd\xee\x7c\x43\xf9\x7e\x92\xa4\x30\x00\xb2\x4c\x3b\xc5\x88\x8d\x14\xf6\x83\x29\xba\x60\xf0\x33\xe7\x98\x92\xd4\x11\x8c\x32\xa9\x48\x6a\x30\x16\xf0\x9a\xd0\x6a\xa6\x20\x31\x22\x53\xcb\xdc\x79\x2c\x95\x28\x3e\xfb\xb3\x14\xe3\x18\x1b\x25\xd0\x76\x67\x1b\xba\x0b\x3b\xee\xed\x5e\x12\xfa\xc2\x4a\x11\xcc\x97\x97\xaf\x3e\x96\x4e\x8e\x14\x06\x83\x4b\x9b\x2d\xdd\x64\x13\xdd\x94\xd1\x24\xcc\x46\x52\x0f\x15\x86\x14\x0c\xde\xd5\xa0\xb0\x32\x8a\x6b\x92\x90\x49\xeb\x11\x8c\x0c\x91\x49\xd6\xa4\xb1\x66\x32\x74\x29\xe3\x52\x47\x6b\x52\x70\xa3\xb2\x44\xaf\x22\xba\x63\xc4\x72\x43\xfe\xca\x46\xa8\x82\xc5\x3d\x1b\x58\x73\x53\x8b\x96\xd1\xc5\x4c\xc9\x48\x07\x03\x47\xcc\xd2\xba\x44\x2a\x97\xa2\x0c\x2a\xdf\x54\x16\x49\x0d\x05\x62\x98\xe6\x08\x5f\x74\x68\xd6\xe5\x3b\xb1\x2c\x5d\x21\x36\x23\xb2\x72\x94\x11\xba\xbb\x0b\x8b\x4b\x73\x6e\x98\x3b\x1e\x8c\x99\xca\xb0\x1f\x8c\x8c\x12\x41\xf7\x1e\xbb\x6e\x39\xbf\x5e\xb7\xb0\xdc\x9d\x9f\xa5\x8c\x5f\x49\x1d\xad\x50\x0d\x86\x34\x64\x44\x8c\xc7\xc1\xe0\x78\x5d\xc1\xc9\xa4\xf5\x89\x26\x52\x50\x1c\x0c\x4e\xcb\xf7\xf7\xba\x4b\xf7\xbd\x13\x72\xe0\xa5\x7b\x2c\x6a\xf1\x78\x7f\x3d\x2b\x02\xfa\xc7\x2a\x1d\x3e\x9f\x1b\x9c\xec\xc2\xac\x79\x16\xcd\xb5\x33\x9c\xa5\xb6\x26\x5a\xfa\x89\x62\x53\xbe\xb2\x55\x43\x57\xd8\xac\x01\x86\x6e\xa0\x55\x9f\x04\xbf\x5f\x59\x82\x87\xcd\x03\xef\x4e\x62\xf2\x02\x78\xfd\x0d\x9a\x68\xe3\x7f\x37\x72\x5f\x33\xef\x23\x6c\xfa\x3d\x66\xef\x4e\x4e\x0f\x1b\x08\xde\x37\xaf\x66\xdd\xdc\xac\x97\xbe\x8b\x6e\xa0\x51\x4b\x3b\xb6\x57\xa3\xae\x67\xd4\x5f\xd0\x71\x2b\x53\x92\x46\x37\xd0\xb4\xff\xdf\x71\xb2\x2d\x1e\x8a\x1a\x68\xeb\xed\x67\xdb\xfa\x2d\xfb\x73\xe6\xe7\x9d\x60\x7e\xc1\x31\xc4\x2d\x4c\x5e\xdd\xa3\xf9\xee\xb1\x93\xb8\xd1\x40\x3f\x78\x92\x94\x70\x2e\x15\xc2\x37\x46\x71\x13\x2b\xb8\xb7\xdb\xb5\xec\x99\xb9\x6e\x92\x5d\x1f\x7e\x95\x2e\x17\xaa\x5c\xb0\xa5\x88\x16\x4a\x85\x29\xa3\x38\xb8\x4f\xbb\xa1\xc8\x8f\x11\xbb\x8c\x76\xad\xd0\x56\x46\xb8\x61\x78\x2b\x63\xb5\xfa\xd1\xba\x8a\x6a\x98\x18\x81\xc1\x80\xc7\xcc\x56\x93\x96\xe1\x08\x2a\xb1\x54\x76\x14\x5e\xa7\x4c\x8b\x0d\xb4\x1b\x4a\xa5\xea\x4b\x96\x1a\x27\x8b\x14\x58\x89\xdd\x52\x28\x42\x19\x1c\xa1\x86\xf7\x9e\x65\x44\x46\x17\xee\x3b\xca\x3f\x0f\x2d\x3a\x64\x96\xaf\xe3\xbf\xd5\x1e\xb1\x6f\xf1\xe0\x5c\x56\x07\xcd\x32\x6e\x4f\x81\x86\xba\xa4\x16\x39\xca\x31\xba\xa1\xc0\x90\x65\x8a\x56\x71\x78\xc1\x9e\x55\x99\xef\xeb\x78\xd6\x73\xd6\x1e\x5b\xce\x50\x4b\x81\x9c\xc7\xc8\xaf\x5c\x96\x34\x29\x6f\xfd\x18\x8f\x84\x5b\x7e\x4d\x2a\x09\x7a\x26\x45\x3d\x9c\x8f\x27\xac\x30\x78\xb5\x3a\x7f\x4b\x51\xc3\xe7\xf9\x90\x43\xf1\x7b\xdd\x75\xe5\x7f\xac\x1b\xd5\x21\xab\x17\xf5\x96\x7c\x70\x1e\xc2\xb6\xde\xa2\x6c\x54\xc8\x7e\x78\xfd\x5d\xf0\x2e\x43\xc8\x21\x1c\xc1\x97\x10\xd2\x62\x88\x41\xba\xdb\x21\x9f\x7d\x6d\x68\x3e\xfd\x73\xd0\x06\x8a\x51\x03\xc5\xd2\x81\x92\x1a\xfd\xce\x2b\x6d\x26\x1a\x8c\x56\x53\x60\x21\xa1\x9d\x33\xf1\x15\x34\x78\x44\x4a\x1d\xb5\x0e\xfd\x01\x97\x8b\x64\x09\x32\xbf\xa2\xd0\x39\x08\x8d\xbd\x19\x30\x2a\xa8\xdd\xf3\x0c\x4e\x38\xce\x14\xde\xcc\x4d\x1c\x77\xde\x1f\xdf\xfd\xf3\xf6\x25\x8c\x51\xfc\xd4\x2c\xe8\x14\x71\xfa\xe5\x75\x8e\x4b\xd8\x99\x9a\x8c\x86\x8e\xa6\xfe\x8e\x0f\xbd\x24\x6c\x5e\xb4\xb3\x7c\x78\x68\x58\xcc\xd5\x3d\xaa\x72\x2f\xc6\x90\x56\x24\xaf\x8d\xad\xb0\xc2\x12\x2f\xa7\x7c\xaf\x7b\xd3\x97\xdf\x17\x72\xa6\xf9\x52\x26\x2b\xbb\x74\xb5\x6f\x7d\xca\x59\xbc\x3a\x55\x53\x9c\xaa\x49\x2d\xe1\x66\x03\x5f\x0d\x1b\xfc\xfb\x9c\x1b\x12\xed\x96\x13\xd6\x13\x57\xeb\x75\x1f\x3b\x7f\x9c\x87\xcd\x3f\x4d\x06\xcc\x22\x44\x46\xea\x08\xc8\x40\x91\x67\x41\xe3\x64\x56\x6e\xb6\x5a\x67\x77\xcb\x4f\x10\x06\x7c\xe1\x3b\x1b\xd6\x07\x26\x44\x8e\x36\xa6\x20\xb5\xc8\x59\xe6\xff\xe3\x80\x69\x01\x9c\x69\x18\xe1\x8c\x27\x0a\x60\x0e\xa4\xeb\xb4\x5a\x37\x1d\xe4\x8c\x65\x1b\x62\x33\xc1\x31\xda\x36\xb8\xd8\x64\x4a\x78\x2a\x61\xb2\x91\x42\xc8\x1f\x29\x50\xb4\x61\x84\xa1\xb1\x08\x64\xa7\x52\xfb\x9b\xe2\x18\x75\x5e\x44\xc3\xbe\x32\x4c\x1c\xf8\xfa\x3b\x69\xfb\x33\x66\x95\x35\x5c\x18\xc5\x74\x34\x2f\xba\x53\x8b\x2e\x4b\xd0\x81\xa4\x3d\x07\x52\x4b\xda\x3f\x80\x30\xd3\xdc\xdf\x17\xf0\x1a\x79\x7e\xf3\x4e\xab\xf5\xdd\xdc\x9c\xc6\x95\xcc\x61\x03\x7b\x9e\xe9\x1e\x14\xa9\xc2\x2f\x03\x6a\x97\x59\x14\x40\x31\xa3\xa2\xec\xf7\xff\xb4\x40\x14\xf3\x23\xbd\x76\x63\x36\xf6\xea\x25\x08\xad\x49\x8a\xb3\x2d\xba\x14\x39\xc9\x31\x02\xb7\xc8\xc8\xd8\x5c\x5b\x7e\x37\xd9\xcc\x51\xb1\x8b\x1b\x81\x9d\x56\xeb\x4b\x98\x2f\x4c\xa4\x52\x73\xe3\x14\xdc\xdb\xfe\xe7\x16\xbe\x7f\x32\x49\x02\xa9\x35\x91\x65\x49\xb1\x2d\x6f\x44\x58\x46\x26\x61\x24\x39\x53\x6a\x5a\x68\xf1\xb6\x73\x99\xe9\xdd\x9f\x32\x7b\x03\x02\x64\x3c\x06\x92\x09\xce\x45\x9f\x6b\x51\x52\x3b\x57\x77\x2e\x2e\x48\xf2\x62\x5a\xcc\xb9\x52\x8c\xe0\x58\x82\x45\x43\x33\x89\x25\x8f\xfd\xa5\xf6\xc6\xb7\x36\xef\x6c\xe1\xd5\xbc\xba\x6b\x81\x27\xe9\x5c\xe0\x81\xee\x05\x2a\xf3\xe1\x03\xe5\x08\xd0\x34\xbd\x81\xe1\xea\x20\x74\x6e\x97\x27\xf7\xca\xd4\xf5\x2c\x41\xa8\x78\x3a\xbc\x9e\x85\xa2\x07\xaa\xb6\x92\xce\x22\x66\xc2\x4c\x86\x5e\x19\xc1\x60\x45\xed\x5d\x1a\xaf\xcb\xd5\x55\x15\xb3\x1f\xa5\xb2\xc7\xaa\xad\x52\x75\xe5\x73\x6f\xc8\x33\x2b\x69\x0a\x5f\x0d\x49\x8e\xb0\x9f\x2a\x64\x0e\xdb\x1e\x68\x22\x47\xe0\x3d\x50\xde\x43\xf2\x41\xdd\xab\xac\x87\x34\x58\x8d\x36\x78\x32\xc4\x55\xf0\xf2\x62\x47\xd6\x64\x5a\xdc\x30\xfc\x2f\x86\x18\x9e\x7e\x28\xfe\x56\xb1\x7a\x08\xc0\xf0\x40\x51\x5b\x01\x64\x28\x05\xf3\x50\x12\xde\x7f\x3e\x9f\x2b\x7c\xe9\xcb\x5d\x6b\x9c\xb1\x76\x64\x79\xce\x9a\xf4\xfd\xae\x4a\xd2\xbb\x42\x2e\x2c\xde\x2e\xf4\xba\x0b\xdf\x20\xfc\x27\x00\x00\xff\xff\xf6\x62\x24\xf5\x9a\x38\x00\x00")

func uiPluginAcceptorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiPluginAcceptorGlade,
		"ui/plugin-acceptor.glade",
	)
}

func uiPluginAcceptorGlade() (*asset, error) {
	bytes, err := uiPluginAcceptorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/plugin-acceptor.glade", size: 14490, mode: os.FileMode(420), modTime: time.Unix(1541692484, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiStorageLoadGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\xb0\x3c\xb5\x28\x1c\x3b\xd9\x16\xe8\x41\xd6\x02\xbb\x68\x72\x68\xd0\x16\xd8\x2d\x8a\x9e\x04\x9a\x1a\xcb\xd3\xd0\x1c\x95\x1c\xd9\x56\x7f\x7d\x21\x6b\xd3\xd8\x31\x65\x7d\xd8\x0d\x8c\xa0\x37\x21\x9c\xc7\x79\x9c\x99\xc7\xe1\x38\xd1\xfb\xcd\xd2\x88\x15\x38\x8f\x64\xa7\xf2\xe6\x7a\x22\x05\x58\x4d\x29\xda\x6c\x2a\x7f\xfb\x7c\x37\xfa\x41\xbe\x8f\xaf\xa2\xaf\x46\x23\x71\x0f\x16\x9c\x62\x48\xc5\x1a\x79\x21\x32\xa3\x52\x10\xef\xae\x6f\x6f\xaf\x6f\xc4\x68\x14\x5f\x45\x68\x19\xdc\x5c\x69\x88\xaf\x84\x88\x1c\xfc\x55\xa0\x03\x2f\x0c\xce\xa6\x32\xe3\xc7\x6f\xe5\xb3\xa3\x77\xd7\xb7\x13\x39\xde\xda\xd1\xec\x4f\xd0\x2c\xb4\x51\xde\x4f\xe5\x3d\x3f\xfe\x8e\x36\xa5\xb5\x14\x98\x4e\xe5\xba\xfe\xae\x0c\x85\x88\x72\x47\x39\x38\x2e\x85\x55\x4b\x98\x4a\xad\x6c\x32\x27\x5d\x78\x19\xdf\x29\xe3\x21\x1a\x3f\x19\x84\xed\x19\xd9\x80\x14\xec\x94\xf5\x46\xb1\x9a\x19\x98\xca\x12\xbc\x8c\x1f\x48\xa5\xe2\x13\x93\x53\x59\xeb\x2e\x35\xa5\x24\x27\x8f\x8c\x64\x65\xac\xa1\x3a\x77\xab\xf3\x32\x87\x64\x81\x96\x65\x9c\xa2\x32\x94\xb5\x01\x32\xa7\x56\xc8\x65\xe3\xfe\x7a\x81\x26\xad\xbf\x2b\xb0\x51\x1a\x16\x64\x52\x70\xe3\x2f\x06\xe3\x1d\x8b\x17\xd6\x07\x31\xff\x40\x1b\xf9\xb4\x7a\x48\x65\x85\x1e\x67\x06\x64\xfc\xd9\x15\x07\xf1\x19\x92\x99\x10\x66\xa9\x5c\x86\x36\x31\x30\x67\x19\x7f\xdf\x03\xe1\x30\x5b\xf4\x84\x30\xe5\xfd\x00\x33\x62\xa6\x65\x47\x0c\x39\x04\xcb\xaa\xae\x8e\x15\x38\x46\xad\x4c\x17\xa0\xcf\x95\x46\x9b\x35\xb9\xd9\xcb\x61\x38\x8f\x0f\x6a\x06\x46\xee\xda\x0c\xc8\xe6\xd0\x8c\x86\x70\x66\x4b\x28\xa4\xb9\x5f\x72\xb0\xe2\x0f\x2a\x9c\xf8\xf4\x91\x96\xcb\x26\xf9\x35\x6d\xbc\x51\x06\x33\x2b\xe3\x49\x23\x40\x31\x3b\x9c\x15\x0c\x7e\x7f\x61\x77\xe9\x49\xd3\xb0\xad\x21\xb1\x52\xa6\x80\xa9\x9c\x91\x49\xe5\xb8\x15\xe5\xf1\x6f\xf8\x17\x73\xf3\xdd\x64\x32\x79\x09\x8a\xc6\x61\x12\xd1\xb8\xce\xdc\xde\xdf\x72\xa5\x1f\xd1\x66\xc7\x8f\x0d\x9b\x5c\xd9\xb4\x67\x12\xe6\x68\x4c\xbf\x74\x3f\xdf\x6e\x0d\xf1\x8d\xc6\x07\x74\xf7\x2e\x1c\xd1\xb1\x60\xef\x1d\xa6\x97\x54\xaf\x8e\xd6\xc9\x71\x19\x06\xbd\x91\x29\x96\xb6\x0b\xf0\x20\x24\xe1\xb0\x84\x74\x3c\x38\x36\xa7\xc4\x27\x84\x6d\xd6\xf4\x17\x0d\x8b\x9f\xd5\xb2\xd7\x8e\xad\x62\x0e\x4b\x46\x34\xca\x26\x48\x1b\xe6\x9c\x28\x66\xa5\x17\x47\x3d\x05\x7a\x37\xe5\x5d\x80\x01\x4d\x88\x90\x2e\xc4\xdb\x2f\x84\x9f\xa0\x14\x5f\xff\xaa\xbc\x5f\x93\x4b\xbf\x79\xa3\xa5\x70\xf3\xba\xa5\xf0\xa3\x65\x57\xd6\xcf\x62\xa8\x3e\x93\x8a\xd1\x2b\x95\xc6\x10\x68\x0a\x73\x55\x18\xee\x0f\x66\x22\xc3\x98\x27\x0c\x1b\x0e\x5f\x33\x60\xaa\xd0\x58\xb2\x23\xd8\xa0\x67\xb4\x99\x60\x12\xda\x81\xaa\x9a\x33\xac\xfb\x78\x5b\x3c\xb5\xd4\xbe\x34\x73\x87\x4b\xe5\xca\x04\x35\xd9\x44\x69\xc6\x55\x4d\x72\x80\x90\x3c\x68\xb2\xe9\x99\x36\xdb\xe3\xe5\xc1\x56\x9d\x7c\x75\x06\x56\xa7\x6c\xb5\xc7\xa9\x6b\x7e\xef\xd0\x1c\x71\x72\xe6\x5b\xe0\x88\x98\x2f\xaa\x21\x1c\xdc\x02\x8f\x50\x5e\xe8\x25\x30\x58\x59\x5b\xb2\x68\xb6\xd3\x6f\x4b\xa9\x5d\x4a\x15\x9c\xa5\x17\x9c\x3e\x16\xf4\x79\x22\xd7\x53\x41\xaf\xd7\xf1\xf3\x58\xd0\x70\xde\x73\x8d\x05\x1f\x0a\x66\xb2\xfb\xbf\x4a\x84\x08\xbd\xf2\x2c\x5b\x52\xc1\x89\xe7\xb2\xf2\xe8\x73\x07\x2a\x3d\xf5\xa1\x5f\x1f\xb4\xd6\xf3\x6c\xfb\x9d\x18\x52\x2f\x47\xa2\x30\x9b\xa6\xc7\xd7\x03\x35\xf3\x1a\x1c\xc4\x96\x40\xf6\x85\x3a\xd0\x80\x2b\xf0\x5d\x5f\x09\xa7\xeb\xbc\xd3\xe4\x1c\x02\xb6\x4f\xcf\x21\x54\xeb\x04\x2d\xfe\xa3\x06\x11\xa8\x28\x6d\xc8\x77\x79\x29\x36\x97\xd4\xc7\x6a\x87\xff\x6b\x6a\xc8\xb5\x1b\xc2\x9d\x5a\x52\x17\xd2\x6d\x5e\xed\x47\xa8\xdb\xa1\xdd\x66\xff\x8c\x3b\x8b\xcf\x0b\xd1\x78\xe7\xff\x16\xff\x04\x00\x00\xff\xff\x48\x93\x6f\x0c\x10\x19\x00\x00")

func uiStorageLoadGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiStorageLoadGlade,
		"ui/storage-load.glade",
	)
}

func uiStorageLoadGlade() (*asset, error) {
	bytes, err := uiStorageLoadGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/storage-load.glade", size: 6416, mode: os.FileMode(420), modTime: time.Unix(1541606376, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiSystrayReplacerGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xb1\x6e\xc2\x30\x10\x86\x77\x9e\xe2\x7a\x6b\xe5\x18\xc2\xd2\xc1\x31\x1b\xa8\x3b\x55\xc7\xca\xb1\x8f\xc4\x8d\x63\x53\xdb\x81\xf6\xed\x2b\x0a\x08\x54\x77\xea\x76\xd2\xff\xfd\xba\xef\x74\x62\xf5\x39\x3a\x38\x50\x4c\x36\xf8\x06\x17\xd5\x1c\x81\xbc\x0e\xc6\xfa\xae\xc1\x97\xed\x9a\x3d\xe1\x4a\xce\xc4\x03\x63\xb0\x21\x4f\x51\x65\x32\x70\xb4\xb9\x87\xce\x29\x43\xb0\xac\xea\xba\x5a\x00\x63\x72\x26\xac\xcf\x14\x77\x4a\x93\x9c\x01\x88\x48\x1f\x93\x8d\x94\xc0\xd9\xb6\xc1\x2e\x0f\x8f\x78\x5b\xb4\xac\xea\x39\xf2\x1f\x2e\xb4\xef\xa4\x33\x68\xa7\x52\x6a\x70\x93\x87\x57\xeb\x4d\x38\xe2\x29\x04\x10\xfb\x18\xf6\x14\xf3\x17\x78\x35\x52\x83\x5a\xf9\xb7\x5d\xd0\x53\x42\xb9\x56\x2e\x91\xe0\x57\xe0\xc2\xeb\xde\x3a\x73\x9e\x4f\x6d\xa7\x34\xf5\xc1\x19\x8a\xfc\x02\xf0\x3b\xe2\x17\x5d\xa8\x3c\x8f\xaa\x23\xbc\xe6\xa5\xcd\xc1\x26\xdb\x3a\x42\xb9\x8d\x53\xa1\xf2\x1f\xfd\xbf\x3a\x29\x07\x3d\xa0\xec\xf2\xc0\x54\x1b\xa6\x5c\x76\x04\x3f\x9b\x17\x17\xde\x02\xc1\xef\xbe\xf3\x1d\x00\x00\xff\xff\xf5\xed\x48\x1a\xf6\x01\x00\x00")

func uiSystrayReplacerGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiSystrayReplacerGlade,
		"ui/systray-replacer.glade",
	)
}

func uiSystrayReplacerGlade() (*asset, error) {
	bytes, err := uiSystrayReplacerGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/systray-replacer.glade", size: 502, mode: os.FileMode(420), modTime: time.Unix(1541518671, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ui/key-cert-editor.glade": uiKeyCertEditorGlade,
	"ui/main.glade": uiMainGlade,
	"ui/plugin-acceptor.glade": uiPluginAcceptorGlade,
	"ui/storage-load.glade": uiStorageLoadGlade,
	"ui/systray-replacer.glade": uiSystrayReplacerGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"ui": &bintree{nil, map[string]*bintree{
		"key-cert-editor.glade": &bintree{uiKeyCertEditorGlade, map[string]*bintree{}},
		"main.glade": &bintree{uiMainGlade, map[string]*bintree{}},
		"plugin-acceptor.glade": &bintree{uiPluginAcceptorGlade, map[string]*bintree{}},
		"storage-load.glade": &bintree{uiStorageLoadGlade, map[string]*bintree{}},
		"systray-replacer.glade": &bintree{uiSystrayReplacerGlade, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

