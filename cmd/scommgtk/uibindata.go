// Code generated by go-bindata.
// sources:
// ui/key-cert-editor.glade
// ui/main.glade
// ui/module-acceptor.glade
// ui/storage-load.glade
// ui/systray-replacer.glade
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _uiKeyCertEditorGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x41\x6f\xe3\x36\x13\xbd\xfb\x57\xf0\xe3\xf5\x83\xe3\x64\x8b\x16\x3d\xd8\x5a\x74\x17\xc8\x76\x91\x6d\x11\x20\x69\x8b\x9e\x04\x8a\x1a\xcb\x5c\x53\x1c\x95\xa4\xec\xa8\x45\xff\x7b\x21\xab\x46\xec\x88\xb2\x44\x29\x71\x1c\xf7\xe6\xc0\x1c\x72\xe6\xbd\xc7\xe1\xcc\x38\xd3\xf7\x0f\xa9\x24\x2b\xd0\x46\xa0\x9a\xd1\xab\x8b\x4b\x4a\x40\x71\x8c\x85\x4a\x66\xf4\x97\xfb\xeb\xf1\xf7\xf4\x7d\x30\x9a\xfe\x6f\x3c\x26\x9f\x40\x81\x66\x16\x62\xb2\x16\x76\x41\x12\xc9\x62\x20\xdf\x5c\xbc\xbb\xbc\xb8\x24\xe3\x71\x30\x9a\x0a\x65\x41\xcf\x19\x87\x60\x44\xc8\x54\xc3\x1f\xb9\xd0\x60\x88\x14\xd1\x8c\x26\x76\xf9\x7f\xfa\x78\x50\x69\x46\x27\x9b\x75\x18\x7d\x05\x6e\x09\x97\xcc\x98\x19\xfd\x64\x97\x3f\x81\xca\x29\x11\xf1\x8c\xa6\xa0\xf2\x2b\x5a\xae\x22\x64\x9a\x69\xcc\x40\xdb\x82\x28\x96\xc2\x8c\xae\x84\x11\x91\x04\x1a\xdc\xeb\x1c\xa6\x93\xed\xb7\xee\xc5\x9c\xa9\x70\x8e\x3c\x37\x34\xb8\x66\xd2\xd4\xd7\xf3\x85\x90\x71\xf5\xd9\xe5\xd2\xc7\x05\xf0\x8d\x5f\x9f\x2d\xa4\x95\x6f\x3c\x15\x21\xc7\xac\xa0\x5b\x2b\x4f\x17\xfb\xb8\xe9\xb2\x51\x18\x9a\x05\xae\x43\x26\x65\xf7\x83\x24\x8b\x40\x52\x62\x35\x53\x46\x32\xcb\x22\x09\x33\x5a\x80\xa1\xc1\x0f\x52\xe2\x9a\x7c\xc4\xac\xe8\xb2\x4f\x6e\x20\xcc\x55\x0c\x5a\x0a\xd5\x18\xe7\x74\x52\xe1\xf9\x2f\xd4\x93\x1d\xac\x7b\xe2\x5e\x06\x7c\x66\xb8\xdf\x2d\x70\x4d\x6e\xc0\x81\xfa\x00\xf8\xee\x20\x63\x9a\x59\xd4\xfb\x10\x9a\x54\x84\x16\x93\x44\x82\x09\xcd\x76\xc9\x71\xf1\x1c\x10\xd4\x7e\x2c\xa9\x08\x25\xb2\xf8\xb5\xd5\xd0\x4c\xec\x17\x64\x31\x99\x6b\x4c\xc9\xb5\x90\x70\x71\x71\x0a\xd7\xaa\x06\xa1\x61\x2b\x38\x5d\x08\xef\xd8\x0a\x88\xc5\x13\x02\xb0\x7e\xb1\xde\xec\xed\xe1\xa0\xad\x45\x94\xe1\x12\x8a\x50\xa8\x39\xbe\xb6\x0e\x9e\x39\xb1\x6e\xe3\x23\xe3\xf1\x12\x8a\x71\x19\xe1\x29\x28\xa8\x99\x87\x2c\x8f\xce\x9f\x8a\x2a\xc8\x37\xc0\x46\xf9\x41\xcc\x05\x67\x16\xce\x9c\x92\x9d\x48\x8f\xc4\xcb\xee\x17\x75\x4e\x3e\xe0\x43\x45\x87\x46\xb4\x47\x69\x02\x9e\xac\x47\x2d\x40\x59\x66\x05\x2a\x1a\xac\x4a\x74\x38\x93\x6d\x46\x26\x63\x5c\xa8\x84\x06\xdf\xfa\xf6\x18\x65\xbc\xc7\x16\xd7\x9e\x4b\x6e\xb7\xbe\x54\xda\x29\x89\xd8\xc8\x28\xb4\x45\xb6\x5b\x2b\xf4\x72\xb6\xaf\xc3\x7e\xe2\xfe\xeb\x06\x0a\x72\x5f\x64\xf0\xb7\x7b\xaf\x7d\x61\x6e\x77\x67\x7c\x29\x54\x72\xf8\x4c\x78\xc8\x98\x8a\x3d\x1d\x9d\x8b\x43\x77\xd6\x65\x91\xa1\x11\x95\xfc\x2e\x9b\x22\xa8\xb9\xbb\x97\xf7\x7a\x93\x0c\x5a\xef\xb5\x04\x47\x66\xf9\x0d\x31\x73\xd5\x97\x99\xa7\x31\xd6\xe3\xf3\x8e\xcd\x2f\x2e\x2f\xb5\x3d\x89\xc7\xfb\x75\xfd\x90\x5b\x5b\x6e\xfd\x22\x09\xae\xab\x89\x06\x0e\x62\x05\x26\x8c\x61\xce\x72\x69\x7d\xb0\xc9\xf2\x8c\x06\x9b\x81\x54\xc7\x4c\x9a\x49\xc6\x61\x81\x32\x06\x3d\x79\x8b\x22\x70\xc4\x39\x44\x04\x3f\xa3\x85\x08\x71\x59\x65\x19\x15\x1d\x5b\x0a\x1d\xb2\xe0\x53\x17\xc3\x79\x5e\x42\xf7\xa2\x49\xd0\xc7\x6c\x53\xf8\x59\x16\xf9\xbe\x90\x1b\xbb\x08\x75\x0c\xba\xcd\xb2\x86\x92\x1b\xa9\x3b\xae\x51\x4a\x88\x7f\x13\x2a\xde\x1b\xc5\x0d\x82\x69\x00\x54\x2e\xd3\x85\xd9\x78\x19\x31\x1d\x66\x28\x05\x2f\x68\xc0\xe4\x9a\x15\xc6\x67\x93\x55\xaf\x4d\x9c\x30\xba\xa1\xbc\x87\x07\xfb\xab\x80\x75\x25\x3a\xbb\x76\x89\x6e\x30\xaa\x03\x91\x75\x99\x43\x2c\x36\xb5\x56\x8b\xa2\x9a\xcc\x53\x54\x58\xd6\xca\x9d\x9c\x77\x95\x03\xdb\x6f\xdc\x8a\x75\x1a\x38\x17\x57\x5c\x91\xb2\xaa\x9d\x51\xcb\xa2\x1a\xf4\x4d\xd5\xd2\x71\x44\xdf\x0a\xae\xdf\x88\x59\x35\x6f\xd5\x04\xb2\xbb\xee\x72\x1d\x6d\x59\x14\x56\xaf\x4d\x8b\xd7\x8e\xe2\xa8\x85\x9f\x76\x52\xf6\xdb\xa7\x93\xa2\x24\x65\x3a\x11\x2a\x94\x30\xb7\x34\xb8\x6a\x28\xe5\x0f\x9a\x6a\x91\x2c\xfa\xda\x5a\xcc\x7a\x5a\x46\x68\x2d\xa6\xbe\xc6\x9d\xda\xe6\x76\x86\xdd\x2c\x7f\x4e\x59\xf2\xb4\xfb\x1c\xcc\xf5\x50\xbe\x5d\xf6\x05\x93\x22\x69\x6e\x0f\x9a\x0d\x8d\x45\xbe\xa4\x41\x62\x97\x8d\x53\x98\x43\xe6\x82\xa3\x0a\x8d\xf8\x13\x68\xf0\x5d\xdf\xa4\x7a\xe8\xce\xbb\xce\xdc\x96\xa4\x7d\x70\x6e\x6f\xbd\x9a\x2c\x5b\x9b\xe3\xc7\x40\x9b\x33\x98\xfb\xf9\xf0\xd3\x64\xd3\x73\xe0\x72\xfa\x55\x35\xd9\xfc\x34\x58\x24\x65\x0d\x42\x6e\xb5\x58\x31\x0b\xe4\x06\x8a\x11\x7d\xfc\x29\x98\x12\xa6\x62\x42\xb7\xbf\x51\xd2\x91\x50\xa4\x6c\x85\x08\x8b\x70\x05\x64\x34\x42\x25\x0b\xf2\x3b\xe6\xc4\x94\x0d\x0f\x59\x2a\x5c\x97\x7f\xea\xdd\x0d\x7d\xbd\xfd\x9a\x1b\x2b\xe6\x05\x0d\x38\x28\x0b\xba\xef\x05\x6c\x15\xc7\xb9\xdc\x82\x96\x4c\xe3\x7f\x0b\x86\x17\x04\x9d\x9c\xf3\x2f\x06\xfe\x0b\xc5\xda\x8f\x22\x8e\xe1\x45\xab\xb5\x8e\xca\x39\x42\x91\x57\x8f\xa5\x61\x88\xd9\x40\x7c\x37\xd2\x4f\x74\x48\x7d\x9d\x4b\xd9\x9c\x1e\xfb\x0f\x42\x3b\xf1\xf4\x5c\xf3\xe3\x83\xf3\x80\xd7\x1c\x99\x78\xcf\x00\x06\xf7\xff\x5d\xfb\x95\x5a\xdf\x9f\x31\x6d\x4f\x74\x92\xe2\xd1\xeb\xf7\xee\xf3\x3b\xb7\xec\xfd\xaf\xc4\x33\x0c\xed\xcf\x39\x13\xdd\xe6\x91\x14\x9c\xdc\x32\x6d\x9f\x3b\x19\x75\x78\x6b\x5e\x28\x7f\xf5\x1f\xb0\x77\x1d\x3e\xf7\x9d\xaf\xbf\xf3\x99\xaf\x3f\x86\x31\x9d\xec\xfc\x9b\xed\x3f\x01\x00\x00\xff\xff\x38\x8a\x33\xb3\xbf\x2b\x00\x00")

func uiKeyCertEditorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiKeyCertEditorGlade,
		"ui/key-cert-editor.glade",
	)
}

func uiKeyCertEditorGlade() (*asset, error) {
	bytes, err := uiKeyCertEditorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/key-cert-editor.glade", size: 11199, mode: os.FileMode(420), modTime: time.Unix(1489591472, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiMainGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x4f\x73\xdb\xb6\x12\xbf\xe7\x53\xe0\xe1\xfa\xc6\x92\xec\xe4\x65\x72\x90\x98\x49\xf2\x12\xb7\xd3\x34\xc9\xc4\x4e\xdb\x1b\x07\x24\x57\x14\x2a\x08\x60\x01\x50\xb2\xf2\xe9\x3b\x26\x69\x59\xb6\x40\x10\xa4\x28\x4b\xb2\x98\x53\x3c\xe6\x2e\x80\xc5\xef\xb7\xd8\x5d\xfc\xf1\xf0\xed\xcd\x8c\xa1\x39\x48\x45\x05\x1f\xe1\xf3\xde\x00\x23\xe0\xa1\x88\x28\x8f\x47\xf8\xc7\xf5\xa7\xb3\x37\xf8\xad\xf7\x62\xf8\x9f\xb3\x33\x74\x09\x1c\x24\xd1\x10\xa1\x05\xd5\x13\x14\x33\x12\x01\x7a\xd9\xbb\xb8\xe8\x9d\xa3\xb3\x33\xef\xc5\x90\x72\x0d\x72\x4c\x42\xf0\x5e\x20\x34\x94\xf0\x4f\x4a\x25\x28\xc4\x68\x30\xc2\xb1\x9e\xfe\x17\xdf\x37\xf4\xb2\x77\x31\xc0\xfd\xec\x3b\x11\xfc\x0d\xa1\x46\x21\x23\x4a\x8d\xf0\xa5\x9e\xfe\x49\x79\x24\x16\x18\xd1\x68\x84\xa5\x10\x1a\xdf\x7e\x86\xd0\x30\x91\x22\x01\xa9\x97\x88\x93\x19\x8c\x70\x48\xb8\x3f\x16\x61\xaa\xb0\xf7\x89\x30\x05\xc3\xfe\xdd\x07\xe6\xef\x17\x99\x5a\x3f\x11\x8a\x6a\x2a\x38\xf6\x42\xb8\xed\x6f\x95\x58\x04\x63\x92\x32\xed\x2f\x68\xa4\x27\xd8\x7b\x33\x18\xb8\x4a\x4c\x80\xc6\x13\x8d\xbd\xd7\xd5\x22\xb1\x24\x73\xaa\x97\xa5\x7d\x0a\x27\x94\x45\x48\x2f\x13\x18\x61\x4d\x35\x83\x80\xc8\xc2\x2c\xb7\xca\x18\x09\x61\x22\x58\x04\xb2\x5f\x08\xf4\x33\x89\x75\xe9\xd5\xd7\x1b\xf6\x7e\x2f\x6e\x56\xba\x36\xbb\x36\xa7\x8a\x06\x0c\xb0\x77\x2d\xd3\x0d\x1b\x37\x99\x17\x93\x8c\x90\x14\xb8\x26\xf9\xbc\xcc\x41\x6a\x1a\x12\x66\x14\x7c\x30\x16\xf3\x78\x7e\x01\x12\x81\x7c\xbf\x66\xa1\x86\x23\x6b\x3a\x3a\x93\x5c\x36\x6b\xd8\xbb\xfa\xf0\xc5\x55\x42\xa5\x41\x21\x14\x2c\xd1\x3b\x4e\x67\xa9\xfa\xf6\xf1\xaf\x1f\x57\xa5\xf2\x1b\xa6\x31\x9b\xe7\x5a\xc4\x31\x83\xf7\xa9\xd6\x82\xe7\x24\x0b\xb2\xff\xfb\x82\x33\xca\x01\x3f\xd6\xb0\xd9\x33\x46\x02\x60\x18\x69\x49\xb8\x62\x44\x93\x80\xc1\x08\x2f\x41\x61\xef\x6b\xa6\xa2\xac\x87\x8d\x27\xa1\x62\x22\xea\x8a\x4a\x08\x81\xce\x41\xf9\x05\x53\xab\x34\x0c\xfb\xb9\x11\x1f\xd9\xbb\xbf\x89\x45\xc3\x87\xc3\x84\x84\x53\xca\x63\xfb\x64\xc3\x4d\x42\x78\x54\x13\x53\x63\xca\x58\x3d\xf4\xde\x3b\xbf\x0d\x97\x74\x37\x82\x8d\xee\x6e\x8c\xd3\x85\x83\x5f\x84\x86\x40\x88\x69\x0e\x30\x5e\xfc\xe4\xcf\x08\xe5\x3b\x66\x65\x1d\x31\x35\x11\x0b\x3f\x10\x32\x02\x59\xd3\xf4\x2a\x94\x82\x31\x52\xdd\x51\x47\x52\x3e\xf4\xc1\x5b\xd9\xa6\xc2\x3e\xd6\x61\x9a\x64\x67\x44\xc6\x94\xfb\x0c\xc6\x1a\x7b\xff\x6b\x20\x29\xf3\x65\xb0\x89\xa8\x16\x49\x33\xc1\x40\x68\x2d\x66\x35\x65\x9d\x57\x21\xfb\xec\x9a\x67\xf8\xd7\x19\x89\x4d\xce\x75\xab\x79\xde\x76\xae\x8d\x8d\x13\x46\x63\x8e\x3d\xe0\x51\x5d\x51\xa5\x45\x38\xc5\x5e\xac\xa7\x67\x1c\xf4\x42\xc8\x69\x5d\x0d\x34\x14\xdc\x57\xf4\x27\x60\xef\xb5\x5d\xd6\xec\x94\xef\xb4\x9a\x7c\x6e\x59\x9b\x77\xbe\xb7\x89\xb1\xab\x5d\x70\x99\x64\xa5\x2b\xbe\x1f\x68\xe9\x68\x0c\x4b\x50\xf1\x8b\x1a\xc0\xfc\x9c\xad\xe6\x47\x00\xcc\xf2\xb0\xc3\x12\x55\xad\x94\x11\xad\x25\x0d\x52\x0d\xca\xfc\xc1\xfa\x27\x77\x70\xbe\xc5\x21\x9a\x13\x96\xc2\x08\x5f\x0c\x06\x83\x22\x65\x31\x88\xf6\xed\xea\xdb\x07\x6b\x23\x0b\xb6\x81\xd6\xf3\x0e\xad\xdb\xa2\x15\xc2\x54\x02\xfa\x20\x66\xb3\x94\xd3\x30\x5b\x6f\x14\xfa\xe2\xe8\x30\x9b\xe0\x58\x2f\xd9\x3d\x90\xa9\x26\x8c\x86\x65\x48\x36\x89\x87\x64\x4d\x7c\xd0\x7b\x33\x78\xf8\xef\x55\xc7\x0a\xef\xa2\x63\x45\xad\xe0\x42\x69\x22\x75\x7b\x94\x9a\x0f\x7a\x15\xab\x68\x0b\x2b\xc0\xf9\xc5\x41\xad\x00\xfb\x0a\x57\x5e\xb6\x0d\x75\xe7\xf4\xfa\x71\x21\x8c\x04\x1b\x90\x77\xa7\xc6\x41\xe4\x56\xe5\x88\x7e\x17\x88\xd4\x42\x90\x32\x38\x95\x43\x69\xa3\x20\x45\x02\x3f\x87\x43\x45\xaf\x4b\x26\xd4\x32\x3f\x5d\xba\xfb\x4c\xd3\xdd\xc7\xe9\x5e\x42\x42\xca\xe3\xaa\x66\x6b\xac\x63\x66\x5c\x98\xda\xde\xeb\x2a\x56\xdb\x72\xcd\xad\x67\xb7\xa0\xd9\x8a\xb6\x68\x60\x6b\x5b\xb6\x61\x4f\x93\x8e\x72\x57\xf8\x1d\x7e\x83\x65\xb5\x4a\xdb\x0a\x8b\x2a\x57\x59\x53\x97\xea\xac\xb4\x26\x79\xf7\xd5\xd6\x24\xed\x9c\x72\x21\xfb\xaa\x8b\x6c\x41\x26\x6a\x00\xaf\x8f\x5c\xcb\xe5\x9e\xe0\xe5\xa6\xe2\x50\xa1\xd0\x98\x1c\xce\x89\x06\x7a\x62\x2c\x14\xdb\x48\x6d\xd0\x3c\xdf\x85\x6a\x62\x9d\xa7\x07\xd8\xf6\x7b\x4a\x2b\x3d\xcf\x17\xaa\x15\x89\x02\xda\x0a\xaa\xcf\x27\x9f\x6a\xbd\xa0\xb6\x7d\x6e\xe0\xd4\xb9\xfa\x79\xc1\x29\xe4\x6d\x57\x5a\x48\x12\x03\xfa\x20\xb8\x96\xc2\x12\x14\x3e\xd1\x2c\x75\x89\x5f\x97\xf8\x1d\x41\xe2\x77\x29\x69\x74\x0c\x99\x9f\x14\x0b\xbf\x46\xe2\xf6\xb8\x75\xc1\xd2\x19\xaf\xa3\xa0\x51\x38\x56\x9e\x45\x6f\x6d\xcf\x36\x6c\x6a\xd2\xd1\x28\xa3\x36\x29\x72\xb7\xad\x49\x9a\x91\xa5\x48\xb5\x9f\x6f\x98\xb8\x15\xa9\x51\xe5\x34\x21\x5b\xe4\xbc\x7e\x00\x4b\xc2\x58\x82\x9a\xf8\x24\x49\x58\xb1\x2f\xe4\x27\x12\x14\x68\x65\x99\x4f\xf3\x38\xca\x93\xe9\xac\x0d\x97\x51\x99\x14\xd7\x06\x8b\x49\x49\x83\x70\xdb\xa4\xa6\x69\xc8\x8d\x1c\xc2\x6e\xe4\x14\x7a\x9b\x7a\x55\x37\xfc\x36\xe9\xa8\x57\x38\x30\x69\x70\x3e\x5d\x70\x6f\x90\xea\x44\xc3\x96\x38\xa2\xf6\x68\x00\xfc\x16\xaf\x06\x16\xb4\x46\x82\x8f\x59\x0b\x1d\x07\x4e\x85\x03\x0e\x05\x34\x74\x58\x1c\x88\xa8\xda\x35\x09\xfe\x9f\x37\xd1\xb1\xe0\x54\x58\xe0\x50\x3a\x44\x87\xc5\x02\x09\x33\x31\xdf\x29\x09\xbe\x67\x2d\x74\x1c\x38\x15\x0e\x38\xd4\x24\xd1\x61\x71\x40\x69\xa2\x53\xb5\x4b\x0e\x5c\x65\x2d\xf4\x7a\x1d\x0b\x4e\x85\x05\xaf\x8e\x8e\x05\x12\xa6\xb0\xdc\xed\x42\xe0\xb4\xc9\x6c\x56\xdb\x31\xa0\xaa\x57\x87\xc6\x00\xa7\xea\xd0\x41\x31\x40\x24\xc0\xfd\xe2\x0e\xeb\x0e\x79\xf0\x35\x01\xde\x2d\x05\xa7\x43\x84\x8a\x5b\x36\xf7\x06\xd9\x96\x08\xed\x6f\x74\x33\x18\x6b\x9f\x68\x4d\xc2\x89\x63\x99\x6b\x63\x2b\x4c\x24\x2b\x05\x07\x76\xc8\xa6\xab\xe4\x3f\xb7\x4a\xfe\x4c\x44\x29\x83\xae\x92\xdf\xb9\xea\x93\xa9\xe4\x93\x30\x84\x44\xaf\xb3\xa0\x35\xf4\xbf\xcb\x54\x77\xe0\x3f\x15\xf0\x3f\x59\x09\xff\xd0\xe3\x94\x9d\x9e\xaa\x3b\x91\xb3\xe6\x93\x3a\xb7\xd0\x4c\x0a\xaa\xfc\x12\x44\xe8\xf7\x7c\xb9\x77\xd2\x5e\x7d\x33\xed\xe1\x67\x45\x2f\x16\xf9\x03\x43\x77\xf7\xd3\x02\xc1\xa2\xf2\x6b\x9d\xd5\x57\xd4\xd0\x11\xa0\xbf\x91\x82\xe2\xe9\xa6\x03\x3b\x3a\xdd\x31\xe7\x11\x73\xe6\x84\x66\x2f\xaa\x74\xd4\xd9\x09\x75\x9c\xb6\xff\x8e\x83\x3a\x57\xd9\xeb\x3b\x10\x15\x2f\xc5\xed\x87\x43\x4d\x55\x4c\xb6\x3d\xa0\x3f\xdf\x56\x81\x9a\x90\x48\x2c\x7c\xbd\x4c\x00\x7b\xd4\xed\xca\x45\x83\x84\xe0\x5a\x02\xfc\x41\xa1\x78\xc9\x4f\x9b\xca\x96\x75\xb3\xe1\xbd\xc6\xed\xf9\x19\xf6\xec\x91\x43\x4e\xd8\x59\xf6\xe3\x08\x2b\x60\x10\x3a\xa4\x36\x65\x16\xba\x5a\xc9\x5b\xfc\x0f\x72\x49\xda\x5c\xd2\x81\xfd\x06\xbf\x4e\x41\xfc\x11\x15\xe9\x3a\x3f\x74\xf4\x7e\xa8\x59\x55\xae\xf3\x43\xa7\xed\x87\xba\xab\x6d\x16\xc9\x1d\xbe\x6c\xd6\xe6\xa5\x29\x4b\x4c\xdb\x5d\x6d\x33\x25\x68\xdf\x58\x1a\x53\x6e\x49\xcb\x9e\x68\x76\x0c\xd4\xdc\xf7\x95\xb6\xbc\xe8\x2d\x6e\xfc\xb1\x90\x3e\x13\xf1\xa1\x4e\x6e\x9b\x2f\x5c\x6e\xbe\x3a\x5d\x69\xd2\x76\x21\x62\x71\xc2\x1d\x81\x4d\x04\xfe\x2c\xe2\xa7\x21\xaf\x75\x79\x7c\x02\xf2\x6e\xff\x0e\x73\x9d\x57\x84\xb7\x79\x86\xb9\x24\x12\xa9\x7e\x86\xf9\xe1\x10\xd7\x7e\xb9\xfe\x0b\x43\xc6\x42\x7f\xc2\xa5\x14\x69\x92\xbb\x2c\x92\x24\x7e\xbe\x57\x77\x17\x01\x0f\x17\x34\x8a\x41\xaf\xaa\x5c\xc5\xcf\x45\xc7\x1d\x2e\xaa\xf5\xad\x92\xe5\x77\x7b\xec\x72\x96\xfb\x10\x76\xc1\xf2\x23\xe4\x76\xb9\xf2\x63\xb7\x55\xed\x95\x1c\x54\xac\x12\x2b\x3f\x30\x60\x97\x34\xec\xb1\xda\x05\x2a\x0e\x92\xad\xfe\x82\xc0\x1a\x10\xee\x31\x35\xec\xaf\xfd\x91\x87\x7f\x03\x00\x00\xff\xff\xce\x3f\x35\x42\x3d\x62\x00\x00")

func uiMainGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiMainGlade,
		"ui/main.glade",
	)
}

func uiMainGlade() (*asset, error) {
	bytes, err := uiMainGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/main.glade", size: 25149, mode: os.FileMode(420), modTime: time.Unix(1541513556, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiModuleAcceptorGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x6e\xdb\x3a\x12\xbe\xf7\x53\xcc\x6a\x2f\x36\xc1\xda\x4e\xfa\xb3\xbb\x2d\x60\xbb\xd8\x6e\x9b\xa0\xc0\xb6\xbb\x40\x73\x50\x9c\x2b\x83\x26\x47\x12\x4f\x28\x52\x87\x1c\xd9\xf1\x6b\xf5\xae\xb7\x79\xb2\x03\x49\x56\xe2\xc4\x94\x6d\x39\x71\xa2\x9c\xe6\xe7\x42\x31\x39\x43\xce\xcf\x37\x33\xa4\x47\x83\x77\x17\x89\x82\x29\x5a\x27\x8d\x1e\x06\x2f\xfa\xc7\x01\xa0\xe6\x46\x48\x1d\x0d\x83\x5f\xce\x4e\x7a\x6f\x82\x77\xa3\xce\xe0\x2f\xbd\x1e\x9c\xa2\x46\xcb\x08\x05\xcc\x24\xc5\x10\x29\x26\x10\x5e\xf5\x5f\x1e\xf7\x8f\xa1\xd7\x1b\x75\x06\x52\x13\xda\x90\x71\x1c\x75\x00\x06\x16\x7f\xcf\xa4\x45\x07\x4a\x4e\x86\x41\x44\xe7\x7f\x0f\xae\x17\xca\xc9\x82\xa3\x62\x9e\x99\xfc\x86\x9c\x80\x2b\xe6\xdc\x30\x38\xa5\xf3\x6f\x52\x0b\x33\x0b\x40\x8a\x61\x30\x2b\x9f\xf3\x89\x00\x83\xd4\x9a\x14\x2d\xcd\x41\xb3\x04\x87\x01\x67\x7a\x1c\x1a\x9e\xb9\x60\x74\xc2\x94\xc3\xc1\x51\x35\xc1\x3f\x9f\x24\x29\x0c\x80\x2c\xd3\x4e\x31\x62\x13\x85\xc3\x60\x8e\x2e\x18\xfd\x9b\x73\x4c\x49\xea\x08\x26\x99\x54\x24\x35\x18\x0b\x78\x41\x68\x35\x53\x90\x18\x91\xa9\x55\xee\x3c\x96\x4a\x94\xcf\x3e\x31\x4e\xad\x14\x41\x35\xbc\xba\x99\xa9\x74\x72\xa2\x30\x18\x9d\xd9\x6c\x85\xf7\x2e\xd2\xfa\x68\x12\x66\x23\xa9\xc7\x0a\x43\x0a\x46\xff\x68\x40\x61\x65\x14\x37\x24\x21\x93\x36\x23\x98\x18\x22\x93\x6c\x49\x63\xcd\x6c\xec\x52\xc6\xa5\x8e\xb6\xa4\xe0\x46\x65\x89\xde\x44\x74\xc3\x88\x7e\x43\xfe\x97\x4d\x50\x05\xcb\x73\x76\xb0\xe6\xae\x16\xf5\xd1\xc5\x4c\xc9\x48\x07\x23\x47\xcc\xd2\xb6\x44\xaa\x90\xc2\xe7\xfc\x9f\x0b\xf7\x86\x12\x03\x4c\x73\x84\x4f\x3a\x34\xdb\xf2\x9d\x59\x96\x6e\x10\x9b\x11\x59\x39\xc9\x08\xdd\xcd\x81\xe5\xa1\x8a\x1b\x16\x8e\x07\x53\xa6\x32\x1c\x06\x13\xa3\x44\x19\x26\x96\x68\x8e\xfc\xfc\x06\x47\xa5\xe5\x6e\x7c\x96\x32\x7e\x2e\x75\xb4\x41\x35\x18\xd2\x98\x11\x31\x1e\x07\xa3\xe3\x6d\x05\x27\x93\x36\x27\x9a\x49\x41\x71\x30\x7a\xe9\x9f\x3f\x38\x5a\xd9\xef\xe0\xe8\x96\x87\x3e\x69\x8f\x45\x2d\xee\xee\xaf\xef\xcb\x10\xfd\xae\x4e\x87\x8f\xe7\x06\x2f\x1e\xc2\xac\x45\x5e\x2c\xb4\x33\x5e\x24\xab\x36\x5a\xfa\x9e\x62\x53\x31\xb2\x57\x43\xd7\xd8\xac\x05\x86\x6e\xa1\x55\xef\x05\xbf\x5f\x58\x82\x97\x3f\xda\x87\xde\x07\x09\xca\x4b\xe8\xcd\x77\xd0\x46\x23\xff\xb9\xa1\xfb\x9c\x7a\xef\x60\xd3\xff\xc4\xc8\xcf\x5d\x96\x5c\x7e\x6f\x1f\x7c\x5f\x3d\x1b\x76\x77\xc3\x9e\xe5\x47\xe3\x36\x06\x65\xef\xa9\xed\xd9\xaa\xdb\x59\xf5\x03\x3a\x6e\x65\x4a\xd2\xe8\x36\xda\xf6\x9f\x0f\x9c\x70\xcb\xfb\x9f\x16\x1a\x7b\xff\x19\xb7\xf9\xb9\xfd\x31\x73\xf4\x83\x80\x7e\xc9\x31\xc4\x35\x4e\x9e\xdd\xa3\xfd\xee\xf1\x20\x71\xa3\x85\x7e\x70\x2f\x39\xe1\x44\x2a\x84\xff\x33\x8a\xdb\x58\xc3\xbd\xde\xaf\x65\xdf\x9b\x8b\x36\xd9\x75\xfd\xd5\xb4\x5f\x28\xbf\x60\x2b\x11\x2d\x94\x0a\x53\x46\x71\x70\x9b\x76\x47\x91\xef\x22\xb6\x8f\x76\xab\xd0\xe6\x23\xdc\x31\xbc\xf9\x58\x6d\xbe\xb9\xae\xa3\x1a\x27\x46\x60\x30\xe2\x31\xb3\xf5\xa4\x3e\x1c\x41\x2d\x96\x7c\x4b\xe1\x45\xca\xb4\xd8\x41\xbb\xa1\x54\xaa\xb9\x64\xa9\x71\xb2\x4c\x81\xb5\xd8\xf5\x42\x11\x7c\x70\x84\x06\xde\xfb\x3e\x23\x32\xba\x74\xdf\x49\xf1\x3c\xb6\xe8\x90\x59\xbe\x8d\xff\xd6\x7b\x84\xc5\xaf\x05\x93\x26\x4a\xb8\x0f\x34\x34\x25\xb5\xc8\x51\x4e\xd1\x8d\x05\x86\x2c\x53\xb4\x89\xc3\x13\xf6\xac\xda\x7c\xdf\xc4\xb3\x1e\xb3\xf6\xd8\x73\x86\x5a\x09\xe4\x7c\x71\xe3\xd2\xa6\xbc\xf5\x73\x5c\x14\xee\xf9\x3e\xc9\x13\xf4\x4c\x8a\x7a\x5c\x75\x1d\x6c\x30\x78\xbd\x3a\xff\x97\xa2\x86\x8f\x55\xef\xc2\x67\x6f\xef\xc2\xbe\xdc\xa8\x09\x59\xb3\xa8\xb7\xe2\x83\x55\x08\xdb\xfb\x11\x65\xa7\x42\xf6\xcd\xf3\x17\xc2\x0f\x19\x42\x2e\x7f\x40\x0f\x3e\x85\x8b\x4e\x1d\x90\xee\xba\x79\xe7\x40\x1b\xaa\xba\x7a\x0e\xbb\x40\x31\x6a\xa0\x58\x3a\x50\x52\x17\x33\xcf\xb5\x99\x69\x30\x5a\xcd\x81\x85\x84\xb6\x62\x92\xa3\x51\xea\xa8\x73\xf9\x1d\x7a\x70\xb6\x4c\x91\x20\xcb\x47\x14\x3a\x07\xa1\xb1\x57\x3d\x43\x25\xa1\x7b\x9c\xce\x09\xc7\x99\xc2\xab\xc6\x89\xe3\xfe\x9b\xe3\x9b\x3f\xaf\x9f\x42\x1f\xc5\xbf\xda\x05\x9b\x32\x46\x3f\xbd\x53\xe3\x0a\x6e\xe6\x26\xa3\xb1\xa3\x79\xbe\xc7\x75\xb7\x08\xbb\x17\xec\xac\xe8\x1e\x1a\x97\x10\xb8\x53\xd5\x5e\xf6\x21\x6d\x48\x5c\x3b\x5b\x61\x83\x25\x9e\x4e\xe9\xde\x74\xa7\x4f\xff\x4c\xc8\x99\xe6\x2b\x59\xcc\xb7\xe9\x35\xdf\x5f\x16\x2c\x9e\x9d\xaa\x2d\x4e\xd5\xa6\xe3\xe0\x4e\x09\xeb\x6d\xbb\x12\xd6\xc7\xc2\x8e\x68\xf7\x9c\xaf\xee\xb9\x50\x6f\x7a\xcf\xf9\xf3\xdc\x69\xfe\x6a\x32\x60\x16\x21\x32\x52\x47\x40\x06\xca\x34\x0b\x1a\x67\x8b\x6a\xb3\xd3\x29\xda\x21\x7b\xd7\xe5\x27\x08\x03\x79\xcd\xbb\xe8\xbf\x07\x26\x44\x81\x36\xa6\x20\xb5\xc8\x59\x96\xff\xe3\x80\x69\x01\x9c\x69\x98\xe0\x82\x29\x0a\x60\x0e\xa4\xeb\x77\x3a\x57\xa7\xc7\x83\x54\x65\x91\xd4\x87\x15\xef\x2e\xc4\x66\x86\x53\xb4\x5d\x70\xb1\xc9\x94\xc8\xc9\x85\xc9\x26\x0a\x01\xb5\xcb\x2c\x8a\x2e\x4c\x30\x34\x16\x81\xec\x5c\xea\x7c\xcf\x38\x45\x5d\x54\xd3\x79\xf1\x9d\x74\xf3\x55\x16\xb5\x35\x9c\x1a\xc5\x74\x04\xe5\x2a\xf9\xf6\x5c\x96\xa0\x03\x49\x7f\x73\x20\xb5\xa4\x83\x43\x08\x33\xcd\xf3\x1d\x03\x5e\x20\x2f\xf6\xde\xef\x74\xbe\x9a\xab\x65\x62\x49\x45\xe3\x7e\xb1\x40\x99\x29\xf2\xb1\x6a\x3b\x40\x31\xa3\xb2\xe0\xcf\xff\xb4\x40\x14\x55\x85\x9f\x6b\x37\x66\xd3\x5c\xbd\x04\xa1\x35\x49\xb9\xb0\x45\x97\x22\x27\x39\x45\xe0\x16\x19\x19\x5b\x28\x2b\x9f\x4d\x36\x73\x54\xce\xe2\x46\x60\xbf\xd3\xf9\x14\x16\x03\x33\xa9\x54\x65\x9c\x92\x7b\x37\xff\xdc\xc2\x87\x2f\x48\x90\x5a\x13\x59\x96\x94\xb3\x8a\x13\x08\xcb\xc8\x24\x8c\x24\x67\x4a\xcd\xa1\xb8\xe4\xb9\xfd\xbe\x41\xbe\xc6\xe2\xf2\x07\x90\xf1\x18\x48\x26\x58\x49\x5d\x29\x50\x52\xb7\x50\x71\x21\x2c\x48\xca\x85\xb4\x58\x30\xa5\x18\xc1\xb1\x04\x21\x94\x0a\x61\x16\x4b\x1e\x17\x5b\xad\xac\xdd\xdf\xc3\x5d\x79\xfd\x79\x05\xee\xe5\xcc\x02\x6b\xce\x2d\x50\x9b\x09\xd7\x14\x22\x40\xf3\xf4\x0a\x81\x9b\xe3\xcf\x89\x5d\xed\xd9\xf3\xa9\xeb\x51\xe2\x4f\x79\x61\x78\xb1\x88\x42\x6b\xea\x35\xcf\x99\x22\x66\xc2\xcc\xc6\xb9\x32\x82\x91\xd4\x6b\x49\xbd\xa1\xda\xaf\xae\xba\x70\x7d\x27\x95\xdd\x55\x6d\xb5\xaa\xf3\x46\xe0\xaf\xc8\x33\x2b\x69\x0e\xdf\x98\x2d\x10\x77\x90\x2a\x64\x0e\xbb\x39\xcc\x44\x81\xbf\x5b\x90\xbc\x05\xe3\xc3\xa6\x7b\xd9\x0e\x6a\xb0\x19\x6e\x70\x6f\x90\xab\xe1\x95\x8b\x1d\x59\x93\x69\x71\xc5\xf0\xaf\x18\x62\xf8\xf2\x6d\xf9\x5b\xc7\x6a\x1d\x82\x61\x4d\x3d\x5b\x83\x64\xf0\xa2\x79\x2c\x09\x6f\xdf\x9a\x57\x0a\x57\x8c\x63\x6c\x94\x40\xeb\x8d\x2f\xfe\x62\x64\xdb\xd0\xf2\xa8\x2f\x20\x3c\xd8\x8b\x28\x37\xa5\x5c\x1a\xbc\x1e\x18\x1c\x2d\xbd\x10\xf8\x47\x00\x00\x00\xff\xff\x2c\xe0\xd5\x23\x69\x38\x00\x00")

func uiModuleAcceptorGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiModuleAcceptorGlade,
		"ui/module-acceptor.glade",
	)
}

func uiModuleAcceptorGlade() (*asset, error) {
	bytes, err := uiModuleAcceptorGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/module-acceptor.glade", size: 14441, mode: os.FileMode(420), modTime: time.Unix(1493460483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiStorageLoadGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4b\x6f\xe3\x36\x10\xbe\xe7\x57\xb0\x3c\xb5\x28\x1c\x3b\xde\x16\xd8\x83\xac\x05\x76\xd1\xe4\xd0\xa0\x2d\xb0\x5b\x14\x3d\x09\x34\x35\x96\xa7\xa1\x39\x2a\x39\xf2\x63\x7f\x7d\x21\x2b\xd9\xd8\x6b\xca\x7a\xd8\x0d\x8c\x60\x6f\x42\x38\x1f\x67\x38\x33\xdf\x3c\x9c\xe8\xdd\x7a\x61\xc4\x12\x9c\x47\xb2\x13\x79\x73\x3d\x92\x02\xac\xa6\x14\x6d\x36\x91\x7f\x7e\xba\x1d\xbc\x95\xef\xe2\xab\xe8\xbb\xc1\x40\xdc\x81\x05\xa7\x18\x52\xb1\x42\x9e\x8b\xcc\xa8\x14\xc4\x9b\xeb\xf1\xf8\xfa\x46\x0c\x06\xf1\x55\x84\x96\xc1\xcd\x94\x86\xf8\x4a\x88\xc8\xc1\xbf\x05\x3a\xf0\xc2\xe0\x74\x22\x33\x7e\xf8\x51\x3e\x2b\x7a\x73\x3d\x1e\xc9\xe1\x56\x8e\xa6\xff\x80\x66\xa1\x8d\xf2\x7e\x22\xef\xf8\xe1\x2f\xb4\x29\xad\xa4\xc0\x74\x22\x57\xd5\x77\x29\x28\x44\x94\x3b\xca\xc1\xf1\x46\x58\xb5\x80\x89\xd4\xca\x26\x33\xd2\x85\x97\xf1\xad\x32\x1e\xa2\xe1\x93\x40\x58\x9e\x91\x0d\x48\xc1\x4e\x59\x6f\x14\xab\xa9\x81\x89\xdc\x80\x97\xf1\x3d\xa9\x54\x7c\x64\x72\x2a\x6b\xbc\xc5\x81\xc7\xcf\x25\xb6\xa5\xd6\xea\x09\x49\x4e\x1e\x19\xc9\xca\x58\x43\xe9\xa7\x26\x58\x0a\x33\x55\x18\x4e\x56\x98\xf2\x5c\xc6\x6f\x47\xa3\xb6\x88\x39\x60\x36\x67\x19\x8f\x9b\x21\x99\x53\x4b\xe4\x4d\xad\x4d\x7a\x8e\x26\xad\xbe\x4b\xb0\x51\x1a\xe6\x64\x52\x70\xc3\x47\x81\xe1\x8e\xc4\x57\xd2\x07\x71\x7d\x4f\x6b\xf9\x74\x7a\x68\xca\x12\x3d\x6e\x9d\xfa\xc9\x15\x07\x3e\xed\x13\xfd\x10\x66\xa1\x5c\x86\x36\x31\x30\x63\x19\xff\xdc\x01\xe1\x2a\x97\x76\x81\x30\xe5\xdd\x00\x53\x62\xa6\x45\x4b\x0c\x39\x04\xcb\xaa\xca\xa8\x25\x38\x46\xad\x4c\x1b\xa0\xcf\x95\x46\x9b\xd5\xa9\xd9\x8b\x61\x38\x8e\xf7\x6a\x0a\x46\xee\xca\xf4\x88\x66\xdf\x88\x86\x70\x66\x6b\x50\x88\xd7\xbf\xe7\x60\xc5\xdf\x54\x38\xf1\xf1\x03\x2d\x16\x75\x14\xaf\xbb\x78\xad\x0c\x66\x56\xc6\x07\x3c\xfa\x02\x50\xcc\x0e\xa7\x05\x83\xdf\x3f\xd8\x3d\x7a\xaa\x03\x15\x2d\xc5\x52\x99\x02\x26\x72\x4a\x26\x95\xc3\x46\x94\xc7\xcf\xf0\x05\x73\xf3\xd3\x68\x34\xfa\x1a\x14\x0d\xc3\x46\x44\xc3\x2a\x72\x7b\x7f\xcb\x95\x7e\x40\x9b\x1d\x7f\x36\xac\x73\x65\xd3\x8e\x41\x98\xa1\x31\xdd\xc2\xfd\x5c\x11\x6b\xfc\x1b\x0d\x0f\xcc\xdd\x2b\x38\xa2\x65\xc2\xde\x39\x4c\x2f\x29\x5f\x1d\xad\x92\xe3\x34\x0c\x6a\x23\x53\x2c\x6c\x1b\xe0\x81\x4b\xc2\x6e\x09\xf1\xb8\xb7\x6f\x4e\xf1\x4f\x08\x5b\xcf\xe9\x47\x0e\x8b\xdf\xd4\xa2\xd3\x8d\x8d\x64\x0e\x53\x46\xd4\xd2\x26\x68\x36\xcc\x38\x51\xcc\x4a\xcf\x8f\x6a\x0a\x0c\x27\x94\xb7\x01\x06\x38\x21\x42\xbc\x10\xaf\x3f\x11\x7e\x85\x8d\xf8\xfe\x0f\xe5\xfd\x8a\x5c\xfa\xc3\x2b\x4d\x85\x9b\x97\x4d\x85\x5f\x2c\xbb\x4d\x35\x7a\x43\xf9\x99\x94\x16\xbd\x50\x6a\xf4\x81\x3e\xce\xbc\xdd\xc1\x4c\x64\x18\xf3\x84\x61\xcd\xe1\x32\x03\xa6\x74\x8d\x25\x3b\x80\x35\x7a\x46\x9b\x09\x26\xa1\x1d\xa8\xb2\x39\xc3\xaa\x8b\xb6\xf9\x53\x4b\xed\x6a\x66\xee\x70\xa1\xdc\x26\x41\x4d\x36\x51\x9a\x71\x59\x19\xd9\x83\x48\x1e\x34\xd9\xf4\x4c\x97\xed\xd9\xe5\xc1\x96\x9d\x7c\x79\x06\xab\x4e\xb9\x6a\xcf\xa6\xb6\xf1\xbd\x45\x73\x44\xc9\x99\xab\xc0\x11\x32\x5f\x54\x43\x38\xa8\x02\xf9\x63\x95\xbd\xd0\x4a\xd0\x9b\x5e\x5b\x63\xd1\x6c\x57\xe0\x86\x7c\xbb\x94\x54\x38\x4b\x43\x38\x7d\x37\xe8\x32\x27\x57\xab\x41\xa7\x11\xf9\x79\x37\xa8\x79\xef\xb9\x76\x83\xf7\x05\x33\xd9\xfd\x9f\x26\x42\x06\xbd\xf0\x42\xbb\xa1\x82\x13\xcf\x9b\x52\xa3\xcf\x1d\xa8\xf4\xd4\x69\xbf\x7a\x68\x45\xea\xe9\xf6\x3b\x31\xa4\xda\x30\xba\x7e\x02\xbb\xa7\x7a\xbb\x7a\x3b\xb1\xc1\x91\x5d\xa1\x0e\x34\xe0\x12\x7c\xdb\x51\xe1\x74\x9e\xb7\x5a\x9f\x43\xc0\xe6\x15\x3a\x84\x6a\x5c\xa3\xc5\xff\xd4\x25\x02\x19\xa5\x0d\xf9\x36\xe3\x62\x7d\x4a\x7d\x28\x6f\xf8\x96\x53\x7d\xca\x6e\x08\x77\x6a\x4a\x5d\x48\xb7\x79\xb1\x5f\xa2\xc6\x7d\xbb\xcd\xfe\x1b\x77\x0e\x9f\x0f\xa2\xe1\xce\x3f\x48\xfe\x0b\x00\x00\xff\xff\xdc\xca\xff\x9f\x79\x19\x00\x00")

func uiStorageLoadGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiStorageLoadGlade,
		"ui/storage-load.glade",
	)
}

func uiStorageLoadGlade() (*asset, error) {
	bytes, err := uiStorageLoadGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/storage-load.glade", size: 6521, mode: os.FileMode(420), modTime: time.Unix(1541520654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uiSystrayReplacerGlade = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xb1\x6e\xc2\x30\x10\x86\x77\x9e\xe2\x7a\x6b\xe5\x18\xc2\xd2\xc1\x31\x1b\xa8\x3b\x55\xc7\xca\xb1\x8f\xc4\x8d\x63\x53\xdb\x81\xf6\xed\x2b\x0a\x08\x54\x77\xea\x76\xd2\xff\xfd\xba\xef\x74\x62\xf5\x39\x3a\x38\x50\x4c\x36\xf8\x06\x17\xd5\x1c\x81\xbc\x0e\xc6\xfa\xae\xc1\x97\xed\x9a\x3d\xe1\x4a\xce\xc4\x03\x63\xb0\x21\x4f\x51\x65\x32\x70\xb4\xb9\x87\xce\x29\x43\xb0\xac\xea\xba\x5a\x00\x63\x72\x26\xac\xcf\x14\x77\x4a\x93\x9c\x01\x88\x48\x1f\x93\x8d\x94\xc0\xd9\xb6\xc1\x2e\x0f\x8f\x78\x5b\xb4\xac\xea\x39\xf2\x1f\x2e\xb4\xef\xa4\x33\x68\xa7\x52\x6a\x70\x93\x87\x57\xeb\x4d\x38\xe2\x29\x04\x10\xfb\x18\xf6\x14\xf3\x17\x78\x35\x52\x83\x5a\xf9\xb7\x5d\xd0\x53\x42\xb9\x56\x2e\x91\xe0\x57\xe0\xc2\xeb\xde\x3a\x73\x9e\x4f\x6d\xa7\x34\xf5\xc1\x19\x8a\xfc\x02\xf0\x3b\xe2\x17\x5d\xa8\x3c\x8f\xaa\x23\xbc\xe6\xa5\xcd\xc1\x26\xdb\x3a\x42\xb9\x8d\x53\xa1\xf2\x1f\xfd\xbf\x3a\x29\x07\x3d\xa0\xec\xf2\xc0\x54\x1b\xa6\x5c\x76\x04\x3f\x9b\x17\x17\xde\x02\xc1\xef\xbe\xf3\x1d\x00\x00\xff\xff\xf5\xed\x48\x1a\xf6\x01\x00\x00")

func uiSystrayReplacerGladeBytes() ([]byte, error) {
	return bindataRead(
		_uiSystrayReplacerGlade,
		"ui/systray-replacer.glade",
	)
}

func uiSystrayReplacerGlade() (*asset, error) {
	bytes, err := uiSystrayReplacerGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ui/systray-replacer.glade", size: 502, mode: os.FileMode(420), modTime: time.Unix(1541518671, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ui/key-cert-editor.glade": uiKeyCertEditorGlade,
	"ui/main.glade": uiMainGlade,
	"ui/module-acceptor.glade": uiModuleAcceptorGlade,
	"ui/storage-load.glade": uiStorageLoadGlade,
	"ui/systray-replacer.glade": uiSystrayReplacerGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"ui": &bintree{nil, map[string]*bintree{
		"key-cert-editor.glade": &bintree{uiKeyCertEditorGlade, map[string]*bintree{}},
		"main.glade": &bintree{uiMainGlade, map[string]*bintree{}},
		"module-acceptor.glade": &bintree{uiModuleAcceptorGlade, map[string]*bintree{}},
		"storage-load.glade": &bintree{uiStorageLoadGlade, map[string]*bintree{}},
		"systray-replacer.glade": &bintree{uiSystrayReplacerGlade, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

